npm init 
npm install express
npm instal jsonwebtoken
npm install express-validator
npm install bcrypt
npm install nodemon
npm install mongoose
npm instal cors 
настройка модулей в пэкедж джэйсон: "type":"module",
"scripts": {
"dev": "nodemon index.js"
  },

база данных:
import express from "express";
import mongoose from 'mongoose';
import { validationResult } from 'express-validator';
import {registerValidator} from './checkAuth.js';
import UserModel from './models/user.js';
import GroupModel from './models/group.js';
import WordModel from './models/words.js';
import jwt from 'jsonwebtoken';
import bcrypt from 'bcrypt'
import {authMiddleware} from './Authmiddleware.js';
const app = express();
app.use(express.json());
app.use(cors());
mongoose.connect('mongodb+srv://nick:donetsk2@cluster0.cjmncrr.mongodb.net/dictionary')
        .then(()=>console.log('we have connect with our data of base'))
        .catch((err)=>console.log('we have error with our connection', err));
 (вместо dictionary пишем название)


устанавливаем react
npx install create-react-app app

устанваливаем: 
npm install react-redux
npm install @reduxjs/toolkit
npm install axios
npm install react-router-dom

далее вот так делаем регистрацию: 
import './a.css'
import React, { useState} from 'react';
import axios from 'axios';
const SignUpForm = () => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    password: '',
  });
const handleChange = (e) => {
  setFormData({ ...formData, [e.target.name]: e.target.value });
};
console.log('Имя:',formData.name, "." , 'Почта:', formData.email, "." ,"Пароль:", formData.password);

const handleSubmit = async (e) => {
  e.preventDefault();

  try {
    const response = await axios.post('http://localhost:1111/register', formData);
    console.log('Registration successful', response.data);

  } catch (error) {
    console.error('Registration failed', error.response.data);
 
  }
};
    return (
<div> 
<form onSubmit={handleSubmit}>   
  <input 
  type = "text"
  placeholder='Имя'
  name="name"
  value={formData.name}
  onChange={handleChange}
  required
  /> 
  <input 
  type = "email"
  placeholder='Почта'
  name="email"
  value={formData.email}
  onChange={handleChange}
  required
  /> 
  <input 
          type="password"
          placeholder="Пароль"
          name="password"
          value={formData.password}
          onChange={handleChange}
          required
  /> 
  <button type = 'submit'> Регистрация  </button>
</form>
</div>
    );
};
export default SignUpForm;
